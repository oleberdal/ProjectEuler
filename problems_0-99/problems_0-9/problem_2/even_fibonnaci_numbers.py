"""
Author: Berdal, Ole
Created: 25.09.2018
Edited: 29.10.2019
Version: Python 3.7.4

https://projecteuler.net/problem=2:
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
"""
import time
start_time = time.time()


def fibonacci(below):
    fib = [1, 2]
    while fib[-1] <= below:
        fib.append(fib[-1] + fib[-2])

    return fib[:-1]


def remove_odd(numbers):
    return tuple(n for n in numbers if not n % 2)


def main():
    solution = sum(remove_odd(numbers=fibonacci(below=4 * 10**6)))

    print('Solution: %s.\nExecution time: %s seconds.' % (solution, time.time() - start_time))


if __name__ == '__main__':
    main()
